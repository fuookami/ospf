import{_ as e,c as t,o as n,j as s,a0 as l,a as i}from"./chunks/framework.CbnEo4Rt.js";const T1=JSON.parse('{"title":"复杂示例 3：一维分切问题","description":"","frontmatter":{},"headers":[],"relativePath":"zh-cn/examples/framework-example3.md","filePath":"zh-cn/examples/framework-example3.md"}'),p={name:"zh-cn/examples/framework-example3.md"},h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.525ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 2000 688","aria-hidden":"true"},r={tabindex:"0"},k={style:{"text-align":"center"}},T={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.581ex",role:"img",focusable:"false",viewBox:"0 -677 1500 699","aria-hidden":"true"},F={style:{"text-align":"center"}},o={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},m={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.579ex",role:"img",focusable:"false",viewBox:"0 -676 1000 698","aria-hidden":"true"},g={style:{"text-align":"center"}},E={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},A={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 1500 688","aria-hidden":"true"},y={style:{"text-align":"center"}},c={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},u={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 1500 688","aria-hidden":"true"},D={style:{"text-align":"center"}},b={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 1500 688","aria-hidden":"true"},w={style:{"text-align":"center"}},f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},B={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 1500 688","aria-hidden":"true"},H={style:{"text-align":"center"}},L={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},C={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.581ex",role:"img",focusable:"false",viewBox:"0 -677 1500 699","aria-hidden":"true"},M={style:{"text-align":"center"}},v={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Z={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.507ex",role:"img",focusable:"false",viewBox:"0 -666 1500 666","aria-hidden":"true"},_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},V={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.666ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.468ex",height:"2.211ex",role:"img",focusable:"false",viewBox:"0 -683 3300.8 977.2","aria-hidden":"true"},P={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},j={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.781ex",height:"1.52ex",role:"img",focusable:"false",viewBox:"0 -661 345 672","aria-hidden":"true"},S={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},R={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.462ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.932ex",height:"1.957ex",role:"img",focusable:"false",viewBox:"0 -661 412 865","aria-hidden":"true"},O={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},I={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.041ex"},xmlns:"http://www.w3.org/2000/svg",width:"34.447ex",height:"5.191ex",role:"img",focusable:"false",viewBox:"0 -950 15225.7 2294.2","aria-hidden":"true"},q={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},z={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.041ex"},xmlns:"http://www.w3.org/2000/svg",width:"62.245ex",height:"5.191ex",role:"img",focusable:"false",viewBox:"0 -950 27512.2 2294.2","aria-hidden":"true"},N={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},G={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"12.213ex",height:"1.952ex",role:"img",focusable:"false",viewBox:"0 -705 5398 862.8","aria-hidden":"true"},X={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},J={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.65ex"},xmlns:"http://www.w3.org/2000/svg",width:"35.933ex",height:"2.242ex",role:"img",focusable:"false",viewBox:"0 -704 15882.4 991.2","aria-hidden":"true"},U={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},$={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.65ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.876ex",height:"2.195ex",role:"img",focusable:"false",viewBox:"0 -683 3039.2 970.2","aria-hidden":"true"},K={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},W={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.138ex",height:"1.439ex",role:"img",focusable:"false",viewBox:"0 -442 503 636","aria-hidden":"true"},Y={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},s1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"15.914ex",height:"5.175ex",role:"img",focusable:"false",viewBox:"0 -950 7034 2287.1","aria-hidden":"true"},a1={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},i1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"20.366ex",height:"5.175ex",role:"img",focusable:"false",viewBox:"0 -950 9001.9 2287.1","aria-hidden":"true"},t1={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},n1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.312ex"},xmlns:"http://www.w3.org/2000/svg",width:"14.561ex",height:"1.857ex",role:"img",focusable:"false",viewBox:"0 -683 6435.9 821","aria-hidden":"true"};function l1(e1,a,p1,h1,Q1,r1){return n(),t("div",null,[a[54]||(a[54]=s("h1",{id:"复杂示例-3-一维分切问题",tabindex:"-1"},[i("复杂示例 3：一维分切问题 "),s("a",{class:"header-anchor",href:"#复杂示例-3-一维分切问题","aria-label":'Permalink to "复杂示例 3：一维分切问题"'},"​")],-1)),a[55]||(a[55]=s("h2",{id:"问题描述",tabindex:"-1"},[i("问题描述 "),s("a",{class:"header-anchor",href:"#问题描述","aria-label":'Permalink to "问题描述"'},"​")],-1)),s("p",null,[a[2]||(a[2]=i("原材料长 ",-1)),s("mjx-container",h,[(n(),t("svg",Q,a[0]||(a[0]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[1]||(a[1]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"1000")])],-1))]),a[3]||(a[3]=i(" 个单位，需要把原材料切分以下的成品材料，且满足每种成品材料对应的需求量，目标是最小化所需原材料的数量：",-1))]),s("table",r,[a[24]||(a[24]=s("thead",null,[s("tr",null,[s("th",{style:{"text-align":"center"}}),s("th",{style:{"text-align":"center"}},"长度"),s("th",{style:{"text-align":"center"}},"需求量")])],-1)),s("tbody",null,[s("tr",null,[a[8]||(a[8]=s("td",{style:{"text-align":"center"}},"成品 1",-1)),s("td",k,[s("mjx-container",T,[(n(),t("svg",d,a[4]||(a[4]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width:3;"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[5]||(a[5]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"450")])],-1))])]),s("td",F,[s("mjx-container",o,[(n(),t("svg",m,a[6]||(a[6]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" style="stroke-width:3;"></path><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(500,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[7]||(a[7]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"97")])],-1))])])]),s("tr",null,[a[13]||(a[13]=s("td",{style:{"text-align":"center"}},"成本 2",-1)),s("td",g,[s("mjx-container",E,[(n(),t("svg",A,a[9]||(a[9]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[10]||(a[10]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"360")])],-1))])]),s("td",y,[s("mjx-container",c,[(n(),t("svg",u,a[11]||(a[11]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" style="stroke-width:3;"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[12]||(a[12]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"610")])],-1))])])]),s("tr",null,[a[18]||(a[18]=s("td",{style:{"text-align":"center"}},"成品 3",-1)),s("td",D,[s("mjx-container",b,[(n(),t("svg",x,a[14]||(a[14]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[15]||(a[15]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"310")])],-1))])]),s("td",w,[s("mjx-container",f,[(n(),t("svg",B,a[16]||(a[16]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1000,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[17]||(a[17]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"395")])],-1))])])]),s("tr",null,[a[23]||(a[23]=s("td",{style:{"text-align":"center"}},"成品 4",-1)),s("td",H,[s("mjx-container",L,[(n(),t("svg",C,a[19]||(a[19]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[20]||(a[20]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"140")])],-1))])]),s("td",M,[s("mjx-container",v,[(n(),t("svg",Z,a[21]||(a[21]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)" style="stroke-width:3;"></path></g></g></g>',1)]))),a[22]||(a[22]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"211")])],-1))])])])])]),a[56]||(a[56]=l('<h2 id="数学模型" tabindex="-1">数学模型 <a class="header-anchor" href="#数学模型" aria-label="Permalink to &quot;数学模型&quot;">​</a></h2><h3 id="rmp" tabindex="-1">RMP <a class="header-anchor" href="#rmp" aria-label="Permalink to &quot;RMP&quot;">​</a></h3><h4 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h4>',3)),s("p",null,[s("mjx-container",_,[(n(),t("svg",V,a[25]||(a[25]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(1468.1,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2412.8,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[26]||(a[26]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msub",null,[s("mi",null,"x"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mi",null,"j")])]),s("mo",null,"∈"),s("mi",null,"N")])],-1))]),a[31]||(a[31]=i("：使用第 ",-1)),s("mjx-container",P,[(n(),t("svg",j,a[27]||(a[27]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})])])],-1)]))),a[28]||(a[28]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"i")])],-1))]),a[32]||(a[32]=i(" 次迭代第 ",-1)),s("mjx-container",S,[(n(),t("svg",R,a[29]||(a[29]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D457",d:"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z",style:{"stroke-width":"3"}})])])],-1)]))),a[30]||(a[30]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"j")])],-1))]),a[33]||(a[33]=i(" 个切割方案的数量。",-1))]),a[57]||(a[57]=s("h4",{id:"中间值",tabindex:"-1"},[i("中间值 "),s("a",{class:"header-anchor",href:"#中间值","aria-label":'Permalink to "中间值"'},"​")],-1)),a[58]||(a[58]=s("h5",{id:"_1-原材料总使用量",tabindex:"-1"},[i("1. 原材料总使用量 "),s("a",{class:"header-anchor",href:"#_1-原材料总使用量","aria-label":'Permalink to "1. 原材料总使用量"'},"​")],-1)),s("mjx-container",O,[(n(),t("svg",I,a[34]||(a[34]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(760,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1245,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(1714,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(2679.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3735.5,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4495.5,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4980.5,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(5449.5,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(7263.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="munder" transform="translate(8263.6,0)"><g data-mml-node="mo" transform="translate(59,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(0,-1100) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(1079,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(836,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g></g><g data-mml-node="msub" transform="translate(9992.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(11182.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(11460.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(11905.2,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(12461.2,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(13150.9,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(14095.7,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(836,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),a[35]||(a[35]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"C"),s("mi",null,"o"),s("mi",null,"s"),s("msub",null,[s("mi",null,"t"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i")])]),s("mo",null,"="),s("mi",null,"C"),s("mi",null,"o"),s("mi",null,"s"),s("msub",null,[s("mi",null,"t"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"+"),s("munder",null,[s("mo",{"data-mjx-texclass":"OP"},"∑"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"j"),s("mo",null,"∈"),s("msub",null,[s("mi",null,"N"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i")])])])]),s("msub",null,[s("mi",null,"x"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mi",null,"j")])]),s("mo",null,","),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"0.278em"})]),s("mi",{mathvariant:"normal"},"∀"),s("mi",null,"j"),s("mo",null,"∈"),s("msub",null,[s("mi",null,"N"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i")])])])],-1))]),a[59]||(a[59]=s("h5",{id:"_2-成品材料生产量",tabindex:"-1"},[i("2. 成品材料生产量 "),s("a",{class:"header-anchor",href:"#_2-成品材料生产量","aria-label":'Permalink to "2. 成品材料生产量"'},"​")],-1)),s("mjx-container",q,[(n(),t("svg",z,a[36]||(a[36]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(763,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1335,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1696,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2199,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(2771,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(4092.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5148.2,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5911.2,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6483.2,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6844.2,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7347.2,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(7919.2,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1623,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(1901,0) scale(1.414)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(2137.2,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(10452.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="munder" transform="translate(11452.5,0)"><g data-mml-node="mo" transform="translate(59,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(0,-1100) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(1079,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(836,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g></g><g data-mml-node="mi" transform="translate(13181.1,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(13931.1,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(14809.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(15294.1,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(15866.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(16466.1,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(757,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(18023.3,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(18523.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(19713.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(19991.8,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(20436.5,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(20992.5,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(21682.3,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(22627,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(836,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(23757,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(24035,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(24479.7,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(25035.7,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(25816.4,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(26761.2,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[37]||(a[37]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"O"),s("mi",null,"u"),s("mi",null,"t"),s("mi",null,"p"),s("mi",null,"u"),s("msub",null,[s("mi",null,"t"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mi",null,"p")])]),s("mo",null,"="),s("mi",null,"O"),s("mi",null,"u"),s("mi",null,"t"),s("mi",null,"p"),s("mi",null,"u"),s("msub",null,[s("mi",null,"t"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1"),s("mo",null,","),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"0.167em"})]),s("mi",null,"p")])]),s("mo",null,"+"),s("munder",null,[s("mo",{"data-mjx-texclass":"OP"},"∑"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"j"),s("mo",null,"∈"),s("msub",null,[s("mi",null,"N"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i")])])])]),s("mi",null,"A"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("msub",null,[s("mi",null,"t"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mi",null,"j"),s("mi",null,"p")])]),s("mo",null,"⋅"),s("msub",null,[s("mi",null,"x"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mi",null,"j")])]),s("mo",null,","),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"0.278em"})]),s("mi",{mathvariant:"normal"},"∀"),s("mi",null,"j"),s("mo",null,"∈"),s("msub",null,[s("mi",null,"N"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i")])]),s("mo",null,","),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"0.278em"})]),s("mi",{mathvariant:"normal"},"∀"),s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"P")])],-1))]),a[60]||(a[60]=s("h4",{id:"目标函数",tabindex:"-1"},[i("目标函数 "),s("a",{class:"header-anchor",href:"#目标函数","aria-label":'Permalink to "目标函数"'},"​")],-1)),a[61]||(a[61]=s("h5",{id:"_1-原材料使用量最小",tabindex:"-1"},[i("1. 原材料使用量最小 "),s("a",{class:"header-anchor",href:"#_1-原材料使用量最小","aria-label":'Permalink to "1. 原材料使用量最小"'},"​")],-1)),s("mjx-container",N,[(n(),t("svg",G,a[38]||(a[38]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1051,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1396,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(1996,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(2996,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3756,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4241,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(4710,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),a[39]||(a[39]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"M"),s("mi",null,"i"),s("mi",null,"n"),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"1em"})]),s("mi",null,"C"),s("mi",null,"o"),s("mi",null,"s"),s("msub",null,[s("mi",null,"t"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i")])])])],-1))]),a[62]||(a[62]=s("h4",{id:"约束",tabindex:"-1"},[i("约束 "),s("a",{class:"header-anchor",href:"#约束","aria-label":'Permalink to "约束"'},"​")],-1)),a[63]||(a[63]=s("h5",{id:"_1-成品材料生产量要满足需求量",tabindex:"-1"},[i("1. 成品材料生产量要满足需求量 "),s("a",{class:"header-anchor",href:"#_1-成品材料生产量要满足需求量","aria-label":'Permalink to "1. 成品材料生产量要满足需求量"'},"​")],-1)),s("mjx-container",X,[(n(),t("svg",J,a[40]||(a[40]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(469,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(913.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1274.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(1552.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(2719.3,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3482.3,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4054.3,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4415.3,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4918.3,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(5490.3,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(6811.7,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7867.5,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8695.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(9161.5,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(10039.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(10568.5,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(11168.5,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(12127.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(12405.2,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(12849.9,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(13405.9,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(14186.6,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(15131.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[41]||(a[41]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"s"),s("mo",null,"."),s("mi",null,"t"),s("mo",null,"."),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"1em"})]),s("mi",null,"O"),s("mi",null,"u"),s("mi",null,"t"),s("mi",null,"p"),s("mi",null,"u"),s("msub",null,[s("mi",null,"t"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mi",null,"p")])]),s("mo",null,"≥"),s("mi",null,"D"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"n"),s("msub",null,[s("mi",null,"d"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p")])]),s("mo",null,","),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"0.278em"})]),s("mi",{mathvariant:"normal"},"∀"),s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"P")])],-1))]),a[64]||(a[64]=s("h3",{id:"sp",tabindex:"-1"},[i("SP "),s("a",{class:"header-anchor",href:"#sp","aria-label":'Permalink to "SP"'},"​")],-1)),a[65]||(a[65]=s("h4",{id:"变量-1",tabindex:"-1"},[i("变量 "),s("a",{class:"header-anchor",href:"#变量-1","aria-label":'Permalink to "变量"'},"​")],-1)),s("p",null,[s("mjx-container",U,[(n(),t("svg",$,a[42]||(a[42]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(1206.5,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2151.2,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[43]||(a[43]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msub",null,[s("mi",null,"y"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p")])]),s("mo",null,"∈"),s("mi",null,"N")])],-1))]),a[46]||(a[46]=i("：切割 ",-1)),s("mjx-container",K,[(n(),t("svg",W,a[44]||(a[44]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z",style:{"stroke-width":"3"}})])])],-1)]))),a[45]||(a[45]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"p")])],-1))]),a[47]||(a[47]=i(" 成品材料的数量。",-1))]),a[66]||(a[66]=s("h4",{id:"中间值-1",tabindex:"-1"},[i("中间值 "),s("a",{class:"header-anchor",href:"#中间值-1","aria-label":'Permalink to "中间值"'},"​")],-1)),a[67]||(a[67]=s("h5",{id:"_1-原材料使用量",tabindex:"-1"},[i("1. 原材料使用量 "),s("a",{class:"header-anchor",href:"#_1-原材料使用量","aria-label":'Permalink to "1. 原材料使用量"'},"​")],-1)),s("mjx-container",Y,[(n(),t("svg",s1,a[48]||(a[48]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(767,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1236,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1979.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="munder" transform="translate(3035.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(42.8,-1100) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1170,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="msub" transform="translate(4646.2,0)"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(331,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(5605.1,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(6105.3,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),a[49]||(a[49]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"U"),s("mi",null,"s"),s("mi",null,"e"),s("mo",null,"="),s("munder",null,[s("mo",{"data-mjx-texclass":"OP"},"∑"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"P")])]),s("msub",null,[s("mi",null,"l"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p")])]),s("mo",null,"⋅"),s("msub",null,[s("mi",null,"y"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p")])])])],-1))]),a[68]||(a[68]=s("h4",{id:"目标函数-1",tabindex:"-1"},[i("目标函数 "),s("a",{class:"header-anchor",href:"#目标函数-1","aria-label":'Permalink to "目标函数"'},"​")],-1)),a[69]||(a[69]=s("h5",{id:"_1-reduced-cost-最小",tabindex:"-1"},[i("1. Reduced Cost 最小 "),s("a",{class:"header-anchor",href:"#_1-reduced-cost-最小","aria-label":'Permalink to "1. Reduced Cost 最小"'},"​")],-1)),s("mjx-container",a1,[(n(),t("svg",i1,a[50]||(a[50]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1051,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1396,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(1996,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mn" transform="translate(2996,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3718.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="munder" transform="translate(4718.4,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(42.8,-1100) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1170,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="msub" transform="translate(6329.1,0)"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(616,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(7573,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(8073.2,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),a[51]||(a[51]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"M"),s("mi",null,"i"),s("mi",null,"n"),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"1em"})]),s("mn",null,"1"),s("mo",null,"−"),s("munder",null,[s("mo",{"data-mjx-texclass":"OP"},"∑"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"P")])]),s("msub",null,[s("mi",null,"λ"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p")])]),s("mo",null,"⋅"),s("msub",null,[s("mi",null,"y"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"p")])])])],-1))]),a[70]||(a[70]=s("h4",{id:"约束-1",tabindex:"-1"},[i("约束 "),s("a",{class:"header-anchor",href:"#约束-1","aria-label":'Permalink to "约束"'},"​")],-1)),a[71]||(a[71]=s("h5",{id:"_1-原材料使用量不能大于原材料的长度",tabindex:"-1"},[i("1. 原材料使用量不能大于原材料的长度 "),s("a",{class:"header-anchor",href:"#_1-原材料使用量不能大于原材料的长度","aria-label":'Permalink to "1. 原材料使用量不能大于原材料的长度"'},"​")],-1)),s("mjx-container",t1,[(n(),t("svg",n1,a[52]||(a[52]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(469,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(913.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1274.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(1552.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(2719.3,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3486.3,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3955.3,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4699.1,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5754.9,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[53]||(a[53]=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"s"),s("mo",null,"."),s("mi",null,"t"),s("mo",null,"."),s("mstyle",{scriptlevel:"0"},[s("mspace",{width:"1em"})]),s("mi",null,"U"),s("mi",null,"s"),s("mi",null,"e"),s("mo",null,"≤"),s("mi",null,"L")])],-1))]),a[72]||(a[72]=l(`<h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><h3 id="domain" tabindex="-1">Domain <a class="header-anchor" href="#domain" aria-label="Permalink to &quot;Domain&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-8QnOe" id="tab-MutU3CM" checked><label data-title="kotlin" for="tab-MutU3CM">kotlin</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes material-theme-darker material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.math.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.concept.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.framework.model.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">data</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">    val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> length: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">,</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">    val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> demand: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) : </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">AutoIndexed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">::</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">class</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">data</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">    val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> products: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Map</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) : </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">AutoIndexed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">::</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">class</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> ShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> : </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">AbstractShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div></div><h3 id="rmp-1" tabindex="-1">RMP <a class="header-anchor" href="#rmp-1" aria-label="Permalink to &quot;RMP&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-NrurG" id="tab-S5y3Q_r" checked><label data-title="kotlin" for="tab-S5y3Q_r">kotlin</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes material-theme-darker material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> java.util.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.math.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.functional.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.multi_array.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.variable.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.expression.monomial.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.expression.polynomial.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.expression.symbol.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.inequality.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.model.mechanism.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.backend.plugins.scip.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.framework.model.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.framework.solver.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">data</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> ProductDemandShadowPriceKey</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">    val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> product: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) : </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ShadowPriceKey</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ProductDemandShadowPriceKey</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">::</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">class</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> RMP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> length: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">,</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> products: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;,</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    initialCuttingPlans: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) {</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> cuttingPlans: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">MutableList</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt; </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> ArrayList</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> x: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">MutableList</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UIntVar</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt; </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> ArrayList</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> rest </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> LinearExpressionSymbol</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">MutableLinearPolynomial</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(), </span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;rest&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> yield </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> LinearExpressionSymbols1</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;output&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, </span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">Shape1</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(products.size)) { _, v </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">        LinearExpressionSymbol</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">MutableLinearPolynomial</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(), </span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;output_</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">\${</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">v[</span><span style="--shiki-dark:#F78C6C;--shiki-light:#F76D47;">0</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">]</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">}</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> metaModel </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> LinearMetaModel</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;demo1&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> solver: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ColumnGenerationSolver</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> GurobiColumnGenerationSolver</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 初始化主问题模型</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">    init</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(rest)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(yield)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">minimize</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(rest)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">registerConstraintGroup</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;product_demand&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        for</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (product </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">in</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> products) {</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">addConstraint</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(yield[product] geq product.demand, </span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;product_demand_</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">\${</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">product.index</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">}</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">        addColumns</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(initialCuttingPlans)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 添加列（切割方案）</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">    fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> addColumn</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(cuttingPlan: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, flush: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Boolean</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF5370;"> true</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Boolean</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        if</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (cuttingPlans.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">find</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> { it.products </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">==</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> cuttingPlan.products } </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">!=</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> null</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">            return</span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF5370;"> false</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        cuttingPlans.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(cuttingPlan)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> x </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> UIntVar</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;x_</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">\${</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">cuttingPlan.index</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">}</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        x.range.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">leq</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(cuttingPlan.products.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">maxOf</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> { (product, amount) </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> product.demand </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">/</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> amount </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">+</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> UInt64.one })</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        this</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.x.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(x)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(x)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        rest.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">asMutable</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">() </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">+=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (length </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">-</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> cuttingPlan.products.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">sumOf</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> { it.key.length </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">*</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> it.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> }) </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">*</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> x</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        rest.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">flush</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        for</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> ((product, amount) </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">in</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> cuttingPlan.products) {</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            yield[product].</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">asMutable</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">() </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">+=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> amount </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">*</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> x</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            yield[product].</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">flush</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        if</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (flush) {</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">flush</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF5370;"> true</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 添加列（切割方案）</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">    fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> addColumns</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(cuttingPlans: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        for</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (cuttingPlan </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">in</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> cuttingPlans) {</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">            addColumn</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(cuttingPlan, </span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF5370;">false</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">flush</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 求解线性松弛模型</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    suspend</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;"> operator</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> invoke</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(iteration: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Ret</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt; {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;"> when</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> result </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> solver.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">solveLP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;demo1-rmp-</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">$iteration</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, metaModel)) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Ok </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">                Ok</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">extractShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(result.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.dualSolution))</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Failed </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">                Failed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(result.error)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 求解混合整数模型</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    suspend</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;"> operator</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> invoke</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Ret</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Map</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;"> when</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> result </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> solver.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">solveMILP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;demo1-rmp-ip&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, metaModel)) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Ok </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">                Ok</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">analyzeSolution</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(result.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.solution))</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Failed </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">                Failed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(result.error)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 提炼影子价格（对偶值）表</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> extractShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(dualResult: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Flt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> ret </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> ShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        for</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> ((i, j) </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">in</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> metaModel.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">indicesOfConstraintGroup</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;product_demand&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">!!</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">withIndex</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()) {</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            ret.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">put</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">ShadowPrice</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">ProductDemandShadowPriceKey</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(products[i]), dualResult[j]))</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        ret.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">put</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> { map, args </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            map.map[</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">ProductDemandShadowPriceKey</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(args)]?.price ?: Flt64.zero</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> ret</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> analyzeSolution</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(result: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Flt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Map</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt; {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        ..</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br></div></div></div></div><h3 id="sp-1" tabindex="-1">SP <a class="header-anchor" href="#sp-1" aria-label="Permalink to &quot;SP&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-l1PF6" id="tab-tWzqfNu" checked><label data-title="kotlin" for="tab-tWzqfNu">kotlin</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes material-theme-darker material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> java.util.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.math.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.functional.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.multi_array.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.variable.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.expression.monomial.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.expression.polynomial.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.expression.symbol.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.inequality.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.frontend.model.mechanism.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.core.backend.plugins.scip.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.framework.solver.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">// 初始解生成器</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">object</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> InitialSolutionGenerator</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    operator</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> invoke</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(length: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, products: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Ret</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> solution </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> ArrayList</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;()</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        for</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (product </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">in</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> products) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> amount </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> length </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">/</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> product.length</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            solution.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">mapOf</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">Pair</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(product, amount))))</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> Ok</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(solution)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> SP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> solver: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ColumnGenerationSolver</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> =</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> ScipColumnGenerationSolver</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 求解子问题</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    suspend</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;"> operator</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> invoke</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        iteration: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        length: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">,</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        products: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;,</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        shadowPrice: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ShadowPriceMap</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    ): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Ret</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt; {</span></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 构建子问题模型实例</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> model </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> LinearMetaModel</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;demo1-sp-</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">$iteration</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 定义变量</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> y </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> UIntVariable1</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;y&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, </span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">Shape1</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(products.size))</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        for</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (product </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">in</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> products) {</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            y[product].name </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;"> &quot;</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">\${</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">y.name</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">}</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">_</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">\${</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">product.index</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">}</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        model.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(y)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 定义中间值</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> use </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> LinearExpressionSymbol</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">sum</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(products) { p </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> p.length </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">*</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> y[p] }, </span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;use&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        model.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">add</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(use)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 定义目标函数和约束</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        model.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">minimize</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(Flt64.one </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">-</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> sum</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(products) { p </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> shadowPrice</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(p) </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">*</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> y[p] })</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        model.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">addConstraint</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(use leq length, </span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;use&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 求解并解析</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;"> when</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> result </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> solver.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">solveMILP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;demo1-sp-</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">$iteration</span><span style="--shiki-dark:#C3E88D;--shiki-light:#91B859;">&quot;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, model)) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Ok </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">                Ok</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">analyze</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(model, products, result.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.solution))</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Failed </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">                Failed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(result.error)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> analyze</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(model: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">LinearMetaModel</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, products: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;, result: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Flt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt;): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        ..</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div></div></div><h3 id="应用" tabindex="-1">应用 <a class="header-anchor" href="#应用" aria-label="Permalink to &quot;应用&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-9MAkJ" id="tab-j0l-opr" checked><label data-title="kotlin" for="tab-j0l-opr">kotlin</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes material-theme-darker material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.math.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">import</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> fuookami.ospf.kotlin.utils.functional.</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">class</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;"> CSP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> length </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> UInt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(</span><span style="--shiki-dark:#F78C6C;--shiki-light:#F76D47;">1000UL</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> products: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">List</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&lt;</span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Product</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">&gt; </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> ..</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">. </span><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">// 产品列表</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    suspend</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;"> operator</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> invoke</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(): </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">Try</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 生成初始解</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> initialCuttingPlans </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> InitialSolutionGenerator</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(length, products)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        when</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (initialCuttingPlans) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Failed </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">                return</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> Failed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(initialCuttingPlans.error)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Ok </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {}</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 初始化主问题</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> rmp </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> RMP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(length, products, initialCuttingPlans.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> sp </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> SP</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">        var</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> i </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> UInt64.zero</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        while</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#FF9CAC;--shiki-light:#FF5370;">true</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) {</span></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">            // 求解线性松弛主问题获取影子价格表</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> spm </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> rmp</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(i)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">            when</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (spm) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">                is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Failed </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">                    return</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> Failed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(spm.error)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">                is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Ok </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {}</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">            // 求解子问题生成新的列</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> newCuttingPlan </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> sp</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(i, length, products, spm.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">            when</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (newCuttingPlan) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">                is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Failed </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">                    return</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> Failed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(newCuttingPlan.error)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">                is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Ok </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {}</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">            // 如果生成的列并不能优化主问题，则停止迭代</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">            if</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">reducedCost</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(newCuttingPlan.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, spm.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) geq Flt64.zero</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">                ||</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> !</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">rmp.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">addColumn</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(newCuttingPlan.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            ) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">                break</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            ++</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">i</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">        // 最终求解整数解</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        when</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> (</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">val</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> solution </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> rmp</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()) {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Ok </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">            is</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Failed </span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">-&gt;</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> {</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">                return</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> Failed</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(solution.error)</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">        }</span></span>
<span class="line"><span style="--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;--shiki-light:#39ADB5;--shiki-light-font-style:italic;">        return</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> ok</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#545454;--shiki-dark-font-style:italic;--shiki-light:#90A4AE;--shiki-light-font-style:italic;">    // 计算切割方案的 Reduced Cost</span></span>
<span class="line"><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">    private</span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;"> fun</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;"> reducedCost</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(cuttingPlan: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">CuttingPlan</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">, shadowPrices: </span><span style="--shiki-dark:#FFCB6B;--shiki-light:#E2931D;">ShadowPriceMap</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">) </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">=</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> Flt64.one </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">-</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">            cuttingPlan.products.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">sumOf</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> { (</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">shadowPrices</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">(it.key) </span><span style="--shiki-dark:#89DDFF;--shiki-light:#39ADB5;">*</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;"> it.</span><span style="--shiki-dark:#C792EA;--shiki-light:#9C3EDA;">value</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">.</span><span style="--shiki-dark:#82AAFF;--shiki-light:#6182B8;">toFlt64</span><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">()) }</span></span>
<span class="line"><span style="--shiki-dark:#EEFFFF;--shiki-light:#90A4AE;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div></div></div><p>完整实现请参考：</p><ul><li><a href="https://github.com/fuookami/ospf/tree/main/examples/ospf-kotlin-example/src/main/fuookami/ospf/kotlin/example/framework_demo/demo3" target="_blank" rel="noreferrer">Kotlin</a></li></ul>`,11))])}const d1=e(p,[["render",l1]]);export{T1 as __pageData,d1 as default};
